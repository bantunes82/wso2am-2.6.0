swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "1.0.0"
  title: "WSO2 Identity Server Consent Management Rest API "
  description: |
    This document specifies a **Consent Management RESTfulAPI** for WSO2 **Identity Server** .

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/identity-server/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
# host: apis.is.com

# The base path of the API.
# Will be prefixed to all paths.
# if the tenant domain is carbon.super basepath can be /api/identity/consent-mgt/v1.0 like this too.

basePath: /t/{tenant-domain}/api/identity/consent-mgt/v1.0

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requester is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specified in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json
paths:
  # Endpoint used to add user consents
  "/consents":
    post:
      description: |
         This API is used to store consent information given by the user.
      x-wso2-request: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json" -d "{\"services\": [ { \"service\": \"<Service_Name>\", \"tenantDomain\": \"<Tenant_Domain_Name>\", \"purposes\": [ { \"purposeId\": <Purpose_ID>, \"purposeCategoryId\": [ <Purpose_Category_ID> ], \"consentType\": \"<Consent_Type>\", \"piiCategory\": [ { \"piiCategoryId\": <PII_Category_ID>, \"validity\": \"days:<Number_Of_Days>\" }, { \"piiCategoryId\": <PII_Category_ID>, \"validity\": \"days:<Number_Of_Days>\" } ], \"primaryPurpose\": true, \"termination\": \"days:<Number_Of_Days>\", \"thirdPartyDisclosure\": false, \"thirdPartyName\": \"\" } ] } ], \"collectionMethod\": \"<Collection_Method>\", \"jurisdiction\": \"<Jurisdiction>\", \"language\": \"<Language_Abbreviation>\", \"policyURL\": \"<Service_Policy_URL>", \"properties\": [ { \"key\": \"<PII_Controller's_Public_Key>\", \"value\": \"v1\" } ]}"
      x-wso2-curl: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json" -d "{\"services\": [ { \"service\": \"foo-service\", \"tenantDomain\": \"carbon.super\", \"purposes\": [ { \"purposeId\": 1, \"purposeCategoryId\": [ 1 ], \"consentType\": \"EXPLICIT\", \"piiCategory\": [ { \"piiCategoryId\": 1, \"validity\": \"days:30\" }, { \"piiCategoryId\": 2, \"validity\": \"days:30\" } ], \"primaryPurpose\": true, \"termination\": \"days:30\", \"thirdPartyDisclosure\": false, \"thirdPartyName\": \"\" } ] } ], \"collectionMethod\": \"Sign-Up\", \"jurisdiction\": \"CA\", \"language\": \"EN\", \"policyURL\": \"https://foo.com/privacy\", \"properties\": [ { \"key\": \"k1\", \"value\": \"v1\" } ]}"
      x-wso2-response: |
        {"consentReceiptId":"38279263-f385-4252-8966-40998faa95ae","collectionMethod":"Sign-Up","language":"EN","piiPrincipalId":"admin","tenantDomain":"carbon.super"}
      summary: |
        Add consent

      # post parameters:
      parameters:
        -
          name: consent
          in: body
          description:  This represents the consent element that needs to be stored.
          required: true
          schema:
            $ref: '#/definitions/ConsentRequest'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/ConsentAddResponse'
          headers:
            Location:
              type: 'string'
              description: 'Location of the newly created consent.'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Consent

    get:
      description: |
        This API is used to list consent elements based on the filtered attributes.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents?limit=<Limit_Number>&offset=<Offset_Number>&piiPrincipalId=<PII_Principal_Name>&spTenantDomain=<Tenant_Domain>&service=<Service_Name>*&state=<ACTIVE/REVOKED>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents?limit=10&offset=0&piiPrincipalId=testuser&spTenantDomain=carbon.super&service=foo*&state=ACTIVE" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        [{"consentReceiptID":"7a6886ab-b02f-424f-9cd4-adf5e92f0798","language":"EN","piiPrincipalId":"testuser","tenantDomain":"carbon.super","state":"ACTIVE"}]
      summary: |
        List Consents
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/piiPrincipalId'
        - $ref: '#/parameters/spTenantDomain'
        - $ref: '#/parameters/service'
        - $ref: '#/parameters/state'

      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConsentResponse'
          headers:
            Location:
              type: 'string'
              description: 'Location to retireve the consent element to.'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Consent

  "/consents/receipts/{receiptId}":
    delete:
      description: |
        This API is used to revoke consent.
      x-wso2-request: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/receipts/<Consent_Receipt_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/receipts/7a6886ab-b02f-424f-9cd4-adf5e92f0798" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      summary: |
        Revoke consent
      parameters:
        -
          name: receiptId
          in: path
          description:  This represents the Revoke Receipt ID.
          required: true
          type: 'string'
      responses:
        200:
          description: OK
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Consent
    get:
      description: |
        This API is used to retrieve consent using the conset receipt ID.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/receipts/<Consent_Receipt_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/receipts/7a6886ab-b02f-424f-9cd4-adf5e92f0798" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        {"version":"KI-CR-v1.1.0","jurisdiction":"CA","consentTimestamp":1517742624682,"collectionMethod":"Sign-Up","consentReceiptID":"7a6886ab-b02f-424f-9cd4-adf5e92f0798","publicKey":null,"language":"EN","piiPrincipalId":"testuser","tenantDomain":"carbon.super","state":"ACTIVE","piiControllers":[{"piiController":"sample","contact":"sample","address":{"addressCountry":"USA","addressLocality":"Mountain View","addressRegion":"CA","postOfficeBoxNumber":"233","postalCode":"94043","streetAddress":"1600 Amphitheatre Pkwy"},"email":"sample@abc.com","phone":"+01433444333","onBehalf":false,"piiControllerUrl":"https://sample.piicontroller.url"}],"policyUrl":"https://foo.com/privacy","services":[{"service":"foo-service","tenantDomain":"carbon.super","purposes":[{"purpose":"Contact","purposeCategory":["Legal"],"consentType":"EXPLICIT","piiCategory":[{"piiCategory":"email","validity":"days:30"},{"piiCategory":"username","validity":"days:30"}],"primaryPurpose":true,"termination":"days:30","thirdPartyDisclosure":false,"thirdPartyName":""}]}],"sensitive":false,"spiCat":null}
      summary: |
        Retrieve a consent receipt
      parameters:
        - $ref: '#/parameters/receiptId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ConsentReceipt'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Consent

  "/consents/purposes":
    post:
      description: |
        This API is used to add a new purpose for consent management.
      x-wso2-request: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"purpose\": \"<Purpose_Name>\", \"description\": \"<Purpose_Description>\", \"group\": \"<Purpose_Group>\", \"groupType\": \"<Purpose_Group_Type\", \"piiCategories\": [{\"piiCategoryId\": <PII_Category_Id>, \"mandatory\": <Is_Mandatory>}]}"
      x-wso2-curl: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"purpose\": \"Contact\", \"description\": \"Contact the user\", \"group\": \"SIGNIN\", \"groupType\": \"SYSTEM\", "piiCategories\": {\"piiCategoryId\": 1, \"mandatory\": true}}"
      x-wso2-response: |
        {"purposeId":1,"purpose":"Contact","description":"Contact the user","piiCategories":[{"piiCategoryId":1,"piiCategory":"email","description":"user email","sensitive":false, "mandatory":true},{"piiCategoryId":2,"piiCategory":"username","description":"user name","sensitive":false, "mandatory":false}]}
      summary: |
        Add purpose
      # post parameters:
      parameters:
        -
          name: purpose
          in: body
          description:  This represents the purpose element that needs to be stored.
          required: true
          schema:
            $ref: '#/definitions/PurposeRequest'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/purposeGetResponse'
          headers:
            Location:
              type: 'string'
              description: 'Location of the newly created purpose.'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose

    get:
      description: |
        This API is used to retrieve all purposes.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes?group=<Group>&groupType=<Group_Type>limit=<Limit_Number>&offset=<Offset_Number>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes?group=SIGNUP&groupType=SYSTEM&limit=10&offset=0" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json"
      x-wso2-response: |
        [{"purposeId":1,"purpose":"Contact","description":"Contact the user","piiCategories":[]},{"purposeId":2,"purpose":"Marketing","description":"Sending marketing materials"}]
      summary: |
        Retrieve all purposes
      parameters:
        - $ref: '#/parameters/group'
        - $ref: '#/parameters/groupType'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/purposes'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose

  "/consents/purposes/{purposeId}":
    get:
      description: |
        This API is used to retrieve a specific purpose using the purpose ID.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes/<Purpose_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json"
      x-wso2-response: |
        {"purposeId":1,"purpose":"Contact","description":"Contact the user","piiCategories":[{"piiCategoryId":1,"piiCategory":"email","description":"user email","sensitive":false},{"piiCategoryId":2,"piiCategory":"username","description":"user name","sensitive":false, "mandatory":false}]}
      summary: |
        Retrieve a purpose
      parameters:
        -
          name: purposeId
          type: 'string'
          in: path
          description:  Id of the purpose
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/purposeGetResponse'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose

    delete:
      description: |
        This API is used to delete a purpose.
      x-wso2-request: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes/<Purpose_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purposes/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      summary: |
        Delete a purpose
      parameters:
        -
          name: purposeId
          type: 'string'
          in: path
          description:  Unique ID of the purpose
          required: true
      responses:
        200:
          description: OK
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose
  "/consents/purpose-categories":
    post:
      description: |
        This API is used to add a new purpose category for consent management.
      x-wso2-request: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"purposeCategory\": \"<Category_Name>\", \"description\": \"<Category_Description>\"}"
      x-wso2-curl: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"purposeCategory\": \"Marketing\", \"description\": \"For marketing related activities\"}"
      x-wso2-response: |
        {"purposeCategoryId":1,"purposeCategory":"Marketing","description":"For marketing related activities"}
      summary: |
        Add purpose category
      # post parameters:
      parameters:
        -
          name: purposeCategory
          in: body
          description:  This represents the purpose category name.
          required: true
          schema:
            $ref: '#/definitions/PurposeCategoryRequest'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/purposeCategoryListResponse'
          headers:
            Location:
              type: 'string'
              description: 'Location of the newly created purpose category.'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose Category

    get:
      description: |
        This API is used to retrieve  all purpose categories.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories?limit=<LimitNumber>&offset=<OffsetNumber>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories?limit=10&offset=0" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        [{"purposeCategoryId":1,"purposeCategory":"Marketing","description":"For marketing related activities"},{"purposeCategoryId":2,"purposeCategory":"Legal","description":"For legal requirements"}]
      summary: |
        Retrieve all purpose categories
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/purpseCategories'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose Category

  "/consents/purpose-categories/{purposeCategoryId}":
    get:
      description: |
        This API is used to retrieve a purpose category using the purpose category ID.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories/<Purpose_Category_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        {"purposeCategoryId":1,"purposeCategory":"Marketing","description":"For marketing related activities"}
      summary: |
        Retrieve a purpose category
      parameters:
        -
          name: purposeCategoryId
          type: 'string'
          in: path
          description:  Unique ID of the purpose category
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/purposeCategoryListResponse'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose Category
    delete:
      description: |
        This API is used to delete a purpose category.
      x-wso2-request: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories/<Purpose_Category_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/purpose-categories/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      summary: |
        Delete purpose category
      parameters:
        -
          name: purposeCategoryId
          type: 'string'
          in: path
          description:  Unique ID of the purpose category
          required: true
      responses:
        200:
          description: OK
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - Purpose Category

  "/consents/pii-categories":
    post:
      description: |
        This API is used to add a new PII category for consent management.
      x-wso2-request: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"<PII_Category_Name>\": <Attributes>}"
      x-wso2-curl: |
        curl -k -X POST "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json" -H "Content-Type: application/json" -d "{ \"piiCategory\": \"email\", \"description\": \"user email\", \"sensitive\": false}"
      x-wso2-response: |
        {"piiCategoryId":1,"piiCategory":"email","description":"user email","sensitive":false}
      summary: |
        Add PII category
      # post parameters:
      parameters:
        -
          name: piiCategory
          in: body
          description:  This represents the PII catogory name.
          required: true
          schema:
            $ref: '#/definitions/PIIcategoryRequest'
      responses:
        201:
          description: Successful response
          schema:
            $ref: '#/definitions/piiCategoryListResponse'
          headers:
            Location:
              type: 'string'
              description: 'Location of the newly created PII category'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        409:
          description: Conflict
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - PII Category

    get:
      description: |
        This API is used to retrieve all PII categories.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories?limit=<Limit_Number>&offset=<Offset_Number>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories?limit=10&offset=0" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        [{"piiCategoryId":1,"piiCategory":"email","description":"user email","sensitive":false},{"piiCategoryId":2, "piiCategory":"username","description":"user name","sensitive":false}]
      summary: |
        Retrieve all PII categories
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/piiCategories'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - PII Category

  "/consents/pii-categories/{piiCategoryId}":
    get:
      description: |
        This API is used to retrieve a specific PII category using the PII category ID.
      x-wso2-request: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories/<PII_Category_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X GET "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        {"piiCategoryId":1,"piiCategory":"email","description":"user email","sensitive":false}
      summary: |
        Retrieve a PII category
      parameters:
        -
          name: piiCategoryId
          type: 'string'
          in: path
          description:  Unique ID of the PII category
          required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/piiCategoryListResponse'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - PII Category

    delete:
      description: |
        This API is used to delete a PII category.
      x-wso2-request: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories/<PII_Category_ID>" -H "Authorization: Basic <Base64Encoded[username:password]>" -H "accept: application/json"
      x-wso2-curl: |
        curl -k -X DELETE "https://localhost:9443/api/identity/consent-mgt/v1.0/consents/pii-categories/1" -H "Authorization: Basic YWRtaW46YWRtaW4=" -H "accept: application/json"
      x-wso2-response: |
        "HTTP/1.1 200 Ok"
      summary: |
        Delete PII category
      parameters:
        -
          name: piiCategoryId
          type: 'string'
          in: path
          description:  Unique ID of the PII category
          required: true
      responses:
        200:
          description: OK
        404:
          description: Not Found
          schema:
             $ref: '#/definitions/Error'
        400:
          description: Bad Request
          schema:
             $ref: '#/definitions/Error'
        401:
          description: Unauthorized
          schema:
             $ref: '#/definitions/Error'
        500:
          description: Server Error
          schema:
             $ref: '#/definitions/Error'
      tags:
        - PII Category

definitions:
#-----------------------------------------------------
# The Error Response  object
#-----------------------------------------------------
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      description:
        type: string
#-----------------------------------------------------

#-----------------------------------------------------
# Consent request object
#-----------------------------------------------------
  ConsentRequest:
    type: object
    properties:
      services:
        type: array
        items:
          $ref: '#/definitions/service'
      collectionMethod:
        type: 'string'
      jurisdiction:
        type: 'string'
      language:
        type: 'string'
      policyURL:
        type: 'string'
      properties:
        type: array
        items:
          $ref: '#/definitions/Property'

#-----------------------------------------------------
# Purpose request object
#-----------------------------------------------------
  PurposeRequest:
    type: object
    required:
      - purpose
    properties:
      purpose:
        type: 'string'
      description:
        type: 'string'
      group:
        type: 'string'
      groupType:
        type: 'string'
      piiCategories:
        type: 'array'
        items:
          $ref: '#/definitions/purposePiiCategoryRequest'

#-----------------------------------------------------
# Purpose PII Category request object
#-----------------------------------------------------
  purposePiiCategoryRequest:
    type: object
    properties:
      piiCategoryId:
        type: 'integer'
      mandatory:
        type: 'boolean'

#-----------------------------------------------------
# PII category request object
#-----------------------------------------------------
  PIIcategoryRequest:
    type: object
    required:
      - piiCategory
    properties:
      piiCategory:
        type: 'string'
      description:
        type: 'string'
      displayName:
        type: 'string'
      sensitive:
        type: 'boolean'

#-----------------------------------------------------
# Purpose Category request object
#-----------------------------------------------------
  PurposeCategoryRequest:
    type: object
    required:
      - purposeCategory
    properties:
      purposeCategory:
        type: 'string'
      description:
        type: 'string'

#-----------------------------------------------------
# The Purpose response object
#-----------------------------------------------------
  purposes:
    type: array
    items:
      $ref: '#/definitions/purposeListResponse'

#-----------------------------------------------------
# The Purpose category response object
#-----------------------------------------------------
  purpseCategories:
    type: array
    items:
      $ref: '#/definitions/purposeCategoryListResponse'


#-----------------------------------------------------
# The PII category response object
#-----------------------------------------------------
  piiCategories:
    type: array
    items:
      $ref: '#/definitions/piiCategoryListResponse'

#-----------------------------------------------------
# The Property  object
#-----------------------------------------------------
  Property:
    type: object
    properties:
      key:
        type: string
      value:
        type: string

#-----------------------------------------------------
# Consent Add response object
#-----------------------------------------------------
  ConsentAddResponse:
    type: object
    required:
      - consentReceiptID
      - piiPrincipalId
      - tenantDomain
    properties:
      consentReceiptID:
        type: 'string'
      language:
        type: 'string'
      piiPrincipalId:
        type: 'string'
      tenantDomain:
        type: 'string'
#-----------------------------------------------------
# Consent response object
#-----------------------------------------------------
  ConsentResponse:
    type: object
    required:
      - consentReceiptID
      - piiPrincipalId
      - tenantDomain
    properties:
      consentReceiptID:
        type: 'string'
      language:
        type: 'string'
      piiPrincipalId:
        type: 'string'
      tenantDomain:
        type: 'string'
      state:
        type: 'string'
      spDisplayName:
        type: 'string'
      spDescription:
        type: 'string'
#-----------------------------------------------------
# Consent response object
#-----------------------------------------------------
  ConsentReceipt:
    type: object
    required:
      - version
      - jurisdiction
      - consentTimestamp
      - collectionMethod
      - consentReceiptID
      - piiPrincipalId
      - piiControllers
      - policyUrl
      - services
      - sensitive
      - spiCat

    properties:
      version:
        type: 'string'
        description: 'The version of this specification to which a receipt conforms. The value MUST be “KI-CR-v1.1.0” for this version of the specification.'
      jurisdiction:
        type: 'string'
        description: 'The jurisdiction(s) applicable to this transaction.'
      consentTimestamp:
        type: 'integer'
        format: 'int64'
        description: 'Date and time of the consent transaction. The JSON value is expressed as the number of seconds since 1970-01-01 00:00:00 GMT'
      collectionMethod:
        type: 'string'
        description: 'A description of the method by which consent was obtained.'
      consentReceiptID:
        type: 'string'
        description: 'A unique number for each Consent Receipt.'
      publicKey:
        type: 'string'
        description: 'The PII Controller’s public key.'
      language:
        type: 'string'
        description: 'Language in which the consent was obtained as for ISO 639-1:2002 [ISO 639].'
      piiPrincipalId:
        type: 'string'
        description: 'PII Principal-provided identifier. E.g., email address.'
      tenantDomain:
        type: 'string'
        description: 'Tenant domain of the service (SP).'
      state:
        type: 'string'
        description: 'Current state of the receipt.'
      piiControllers:
        type: array
        description: 'An array that contains one or more items where each item represents one PII Controller.'
        items:
          $ref: '#/definitions/piiController'
      policyUrl:
        type: 'string'
        description: 'A link to the PII Controller’s privacy statement/policy and applicable terms of use in effect when the consent was obtained, and the receipt was issued.'
      services:
        type: array
        description: 'An array that contains one or more items where each item represents one Service.'
        items:
          $ref: '#/definitions/serviceResponse'
      sensitive:
        type: 'boolean'
        description: 'Indicates whether the consent interaction contains PII that is designated sensitive or not sensitive.'
      spiCat:
        type: array
        description: 'A listing of categories where PII data collected is sensitive.'
        items:
          type: 'string'


#-----------------------------------------------------
# The Service  object
#-----------------------------------------------------
  service:
    type: 'object'
    properties:
      service:
        type: 'string'
        description: 'The service or group of services being provided for which PII is collected. The name of the service for which consent for the collection, use, and disclosure of PII is being provided.'
      serviceDisplayName:
        type: 'string'
        description: 'display name of the service'
      serviceDescription:
        type: 'string'
        description: 'Description about the service'
      tenantDomain:
        type: 'string'
        description: 'Tenant domain of the SP'
      purposes:
        type: array
        items:
          $ref: '#/definitions/purpose'

#-----------------------------------------------------
# The Service  Response object
#-----------------------------------------------------
  serviceResponse:
    type: 'object'
    properties:
      service:
        type: 'string'
        description: 'The service or group of services being provided for which PII is collected. The name of the service for which consent for the collection, use, and disclosure of PII is being provided.'
      serviceDisplayName:
        type: 'string'
        description: 'display name of the service'
      serviceDescription:
        type: 'string'
        description: 'Description about the service'
      tenantDomain:
        type: 'string'
        description: 'Tenant domain of the SP'
      purposes:
        type: array
        items:
          $ref: '#/definitions/purposeResponse'

#-----------------------------------------------------
# The purpose  object
#-----------------------------------------------------
  purpose:
    type: 'object'
    required:
      - thirdPartyDisclosure
      - thirdPartyName
      - termination
      - piiCategoryId
      - purposeCategoryId
    properties:
      purposeId:
        type: 'integer'
        description: 'A unique Id of purpose'
      purposeCategoryId:
        type: array
        description: 'The reason the PII Controller is collecting the PII.'
        items:
          type: 'integer'
      consentType:
        type: 'string'
        description: 'The type of the consent used by the PII Controller as their authority to collect, use or disclose PII.'
      piiCategory:
        type: array
        description: 'A list of defined PII categories Ids.'
        items:
          $ref: '#/definitions/piiCategoryList'
      primaryPurpose:
        type: 'boolean'
        description: 'Indicates if a purpose is part of the core service of the PII Controller. Possible values are TRUE or FALSE.'
      termination:
        type: 'string'
        description: 'Conditions for the termination of consent. Link to policy defining how consent or purpose is terminated.'
      thirdPartyDisclosure:
        type: 'boolean'
        description: 'Indicates if the PII Controller is disclosing PII to a third party.  Possible values are TRUE or FALSE.'
      thirdPartyName:
        type: 'string'
        description: 'The name or names of the third party to which the PII Processor may disclose the PII.'


#-----------------------------------------------------
# The purpose response object
#-----------------------------------------------------
  purposeResponse:
    type: 'object'
    required:
      - thirdPartyDisclosure
      - thirdPartyName
      - termination
      - piiCategory
      - purposeCategory
    properties:
      purpose:
        type: 'string'
        description: 'A short, clear explanation of why the PII item is required.'
      purposeId:
        type: 'integer'
        description: 'Id of the purpose.'
      purposeCategory:
        type: array
        description: 'The reason the PII Controller is collecting the PII.'
        items:
          type: 'string'
      consentType:
        type: 'string'
        description: 'The type of the consent used by the PII Controller as their authority to collect, use or disclose PII.'
      piiCategory:
        type: array
        description: 'A list of defined PII categories Ids.  PII Category should reflect the category that will be shared as understood by the PII Principal.'
        items:
          $ref: '#/definitions/piiCategoryNameList'
      primaryPurpose:
        type: 'boolean'
        description: 'Indicates if a purpose is part of the core service of the PII Controller. Possible values are TRUE or FALSE.'
      termination:
        type: 'string'
        description: 'Conditions for the termination of consent. Link to policy defining how consent or purpose is terminated.'
      thirdPartyDisclosure:
        type: 'boolean'
        description: 'Indicates if the PII Controller is disclosing PII to a third party.  Possible values are TRUE or FALSE.'
      thirdPartyName:
        type: 'string'
        description: 'The name or names of the third party to which the PII Processor may disclose the PII.'

#-----------------------------------------------------
# The Purpose List response object
#-----------------------------------------------------

  purposeListResponse:
    type: object
    properties:
      purposeId:
        type: 'integer'
      purpose:
        type: 'string'
      description:
        type: 'string'
      group:
        type: 'string'
      groupType:
        type: 'string'

#-----------------------------------------------------
# The Purpose GET response object
#-----------------------------------------------------

  purposeGetResponse:
    type: object
    properties:
      purposeId:
        type: 'integer'
      purpose:
        type: 'string'
      description:
        type: 'string'
      group:
        type: 'string'
      groupType:
        type: 'string'
      piiCategories:
        type: 'array'
        items:
          $ref: '#/definitions/purposePiiCategoryListResponse'

#-----------------------------------------------------
# The Purpose category List response object
#-----------------------------------------------------

  purposeCategoryListResponse:
    type: object
    properties:
      purposeCategoryId:
        type: 'integer'
      purposeCategory:
        type: 'string'
      description:
        type: 'string'

#-----------------------------------------------------
# The PII category object with id, validity
#-----------------------------------------------------

  piiCategoryList:
    type: object
    properties:
      piiCategoryId:
        type: 'integer'
      validity:
        type: 'string'

#-----------------------------------------------------
# The PII category object with name, validity
#-----------------------------------------------------

  piiCategoryNameList:
    type: object
    properties:
      piiCategoryName:
        type: 'string'
      piiCategoryId:
        type: 'integer'
      validity:
        type: 'string'
      piiCategoryDisplayName:
        type: 'string'

#-----------------------------------------------------
# The Purpose category List response object
#-----------------------------------------------------

  piiCategoryListResponse:
    type: object
    properties:
      piiCategoryId:
        type: 'integer'
      piiCategory:
        type: 'string'
      description:
        type: 'string'
      displayName:
        type: 'string'
      sensitive:
        type: 'boolean'

#-----------------------------------------------------
# The Purpose PII category List response object
#-----------------------------------------------------

  purposePiiCategoryListResponse:
    type: object
    properties:
      piiCategoryId:
        type: 'integer'
      piiCategory:
        type: 'string'
      description:
        type: 'string'
      displayName:
        type: 'string'
      sensitive:
        type: 'boolean'
      mandatory:
        type: 'boolean'
#-----------------------------------------------------
# The address  object
#-----------------------------------------------------
  address:
    type: 'object'
    description: 'The physical address of PII controller. Postal address for contacting the PII Controller. This is compliant with the schema https://schema.org/PostalAddress.'
    properties:
      addressCountry:
        type: 'string'
      addressLocality:
        type: 'string'
      addressRegion:
        type: 'string'
      postOfficeBoxNumber:
        type: 'string'
      postalCode:
        type: 'string'
      streetAddress:
        type: 'string'

#-----------------------------------------------------
# The piiController  object
#-----------------------------------------------------
  piiController:
    type: 'object'
    required:
      - address
      - piiController
      - contact
      - email
      - phone
    properties:
      piiController:
        type: 'string'
        description: 'Name of the first PII Controller who collects the data. This entity is accountable for compliance with the management of PII. The PII Controller determines the purpose(s) and type(s) of PII processing.'
      contact:
        type: 'string'
        description: 'Contact name of the PII Controller. This field MUST contain a non-empty string.'
      address:
        $ref: '#/definitions/address'
      email:
        type: 'string'
        description: 'Contact email address of the PII Controller. The direct email to contact the PII Controller regarding the consent or privacy contract.'
      phone:
        type: 'string'
        description: 'Contact phone number of the PII Controller. The business phone number to contact the PII Controller regarding the consent.'
      onBehalf:
        type: 'boolean'
        description: 'A PII Processor acting on behalf of a PII Controller or PII Processor. For example, a third-party analytics service would be a PII Processor on behalf of the PII Controller, or a site operator acting on behalf of the PII Controller.'
      piiControllerUrl:
        type: 'string'
        description: 'A URL for contacting the PII Controller.'

#-----------------------------------------------------
# Parameters
#-----------------------------------------------------
parameters:
  receiptId:
    name: receiptId
    in: path
    description: The unique identifier of a receipt
    type: string
    required: true

  limit:
    name: limit
    in: query
    description: Number of search results
    required: false
    type: integer

  offset:
    name: offset
    in: query
    description: Start index of the search
    required: false
    type: integer

  service:
    name: service
    in: query
    description: Service name
    required: false
    type: string

  state:
    name: state
    in: query
    description: State (ACTIVE/REVOKED)
    required: false
    type: string

  spTenantDomain:
    name: spTenantDomain
    in: query
    description: Service provider tenant domain
    required: false
    type: string

  piiPrincipalId:
    name: piiPrincipalId
    in: query
    description: Subject identifier
    required: false
    type: string

  consentIdQuery:
    name: consent-id
    in: query
    description: The unique identifier of a consent
    type: string
    required: false

  collectionMethod:
    name: collectionMethod
    in: query
    description: Collection method of the consent
    type: string
    required: false

  piiCategoryId:
    name: piiCategoryId
    in: query
    description: ID of PII Category that will be shared as understood by the PII Principal
    type: string
    required: false

  next:
    name: next
    in: query
    description: Next result set
    type: string
    required: false

  previous:
    name: previous
    in: query
    description: Previous result set
    type: string
    required: false

  group:
    name: group
    in: query
    description: Purpose group
    type: string
    required: false
  groupType:
    name: groupType
    in: query
    description: Type of the purpose group
    type: string
    required: false
