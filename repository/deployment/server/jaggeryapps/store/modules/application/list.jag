<%
var getApplications = function (username) {
    var applications,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupId = session.get("groupId");
        applications = store.getApplications(username, groupId);
        if (log.isDebugEnabled()) {
            log.debug("getApplications : " + stringify(applications));
        }
        return {
            error:false,
            applications:applications
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e.message,
            applications:null
        };

    }

};

var getApplicationsByOwner = function (username) {
    var allApps,
        userApps = [],
        log = new Log(),
        store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupId = session.get("groupId");
        allApps = store.getApplications(username, groupId);
        var userAppIndex = 0;

        for (i = 0; i < allApps.length; i++) {
            if (allApps[i].owner == username) {
                userApps[userAppIndex] = allApps[i];
                userAppIndex++;
            }
        }

        if (log.isDebugEnabled()) {
            log.debug("getApplicationsByOwner : " + stringify(userApps));
        }

        return {
            error:false,
            applications:userApps
        };
    } catch (e) {
        log.error(e.message);

        return {
            error:e.message,
            applications:null
        };
    }
};

var getApplicationsWithPagination = function (username,start,offset,search,sortColumn,sortOrder) {
    var applications,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        var groupId = session.get("groupId");
        applications = store.getApplicationsWithPagination(username, groupId, start, offset, search,sortColumn ,sortOrder);


        if (log.isDebugEnabled()) {
            log.debug("getApplications with pagination : " + stringify(applications));
        }
        return {
            error:false,
            applications:applications
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e.message,
            applications:null
        };

    }

};


/**
 * This method will accept user name and application name and sends a request to host object and gets the response.
 * @param {string} username - subscriber name
 * @param {string} applicationName - application name
 * @param {string} group id.
 * return {Application} a Application.
 */
var getApplicationByName = function (username, applicationName, groupId) {
    var application,
        log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {

        application = store.getApplicationByName(username , applicationName, groupId);
        if (log.isDebugEnabled()) {
            log.debug("getApplicationsByName : " + stringify(application));
        }
        return {
            error: false,
            application: application
        };
    } catch (e) {
        log.error(e.message);
        return {
            error: e,
            applications: null
        };
    }
};


var getAllowedGrantTypes = function(){
    var log = new Log(),store = jagg.module("manager").getAPIStoreObj();
    try {

        grant_types = store.getAllowedGrantTypes();
        if (log.isDebugEnabled()) {
            log.debug("getAllowedGrantTypes : " + stringify(grant_types));
        }
        return {
            error: false,
            grant_types: grant_types
        };
    } catch (e) {
        log.error(e.message);
        return {
            error: e,
            grant_types: null
        };
    }    
};
%>

